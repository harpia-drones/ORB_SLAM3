cmake_minimum_required(VERSION 3.12)
project(g2o LANGUAGES CXX)

# ==================================
#     C++ standard & flags
# ==================================
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -O3 -march=native")

# Build type default
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")

# ==================================
#     Dependencies
# ==================================

# Eigen
find_package(Eigen3 3.1.0 REQUIRED)
if(NOT Eigen3_FOUND)
  message(FATAL_ERROR "Eigen3 >= 3.1.0 not found")
endif()

# OpenMP (optional, experimental)
find_package(OpenMP)
option(G2O_USE_OPENMP "Build g2o with OpenMP support (EXPERIMENTAL)" OFF)
if(OpenMP_FOUND AND G2O_USE_OPENMP)
  message(STATUS "Compiling with OpenMP support")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -DEIGEN_DONT_PARALLELIZE")
endif()

# ==================================
#     Sources and Headers
# ==================================

# Source files
file(GLOB_RECURSE SRCS_CORE   "${CMAKE_CURRENT_SOURCE_DIR}/src/core/*.cpp")
file(GLOB_RECURSE SRCS_TYPES  "${CMAKE_CURRENT_SOURCE_DIR}/src/types/*.cpp")
file(GLOB_RECURSE SRCS_STUFF  "${CMAKE_CURRENT_SOURCE_DIR}/src/stuff/*.cpp")

# All sources
set(SRCS_G2O
  ${SRCS_CORE}
  ${SRCS_TYPES}
  ${SRCS_STUFF}
)

# ==================================
#     Library
# ==================================
add_library(g2o SHARED 
	${SRCS_G2O}
)

# Include headers
target_include_directories(g2o
  PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${EIGEN3_INCLUDE_DIR}
)

# ==================================
#     Output path
# ==================================
set_target_properties(g2o PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib
)